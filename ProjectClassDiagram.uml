
@startuml
  skinparam defaultFontName Consolas

  AddObjectWindow <|-- Gtk::Window
  AddObjectWindow <|-- ViewportObserver
  AddObjectWindow  *-- ViewPort        : viewPort

  MainWindow      <|-left- Gtk::Window
  MainWindow       *-- ViewPort        : viewPort*
  MainWindow       *-- AddObjectWindow : addObjectWindow

  ViewPort   <|-right- Gtk::DrawingArea
  ViewPort    *-- Viewwindow           : viewwindow
  ViewPort    *-- DisplayFile          : displayFile
  ViewPort    *-- ViewportObservers    : viewportObservers

  ViewportObservers "1\n" *-up- "*" ViewportObserver : observers

  class AddObjectWindow {
    Gtk::Grid              point_grid
    Gtk::Grid              line_grid
    Gtk::Grid              polygn_grid
    std::list<Coordinate*> polygon_cord_list
  }

  class DisplayFile {
    std::map< string, DrawableObject* >
    void addObject( DrawableObject* )
    void removeObject( DrawableObject* )
    void removeObjectByName( string )
  }

  class MainWindow {
    Gtk::Box        main_box
    Gtk::Box        left_box
    Gtk::Frame      left_frame
    Gtk::Frame      right_frame
    ViewPort        viewPort
    AddObjectWindow addObjectWindow
  }

  class ViewPort {
    int               Xvpmin
    int               Yvpmin
    int               Xvpmax
    int               Yvpmax

    bool       on_draw(const Cairo::Context>&)
    void       updateViewport(Gtk::Allocation)
    Coordinate convertCoordinateFromWindow(Coordinate)
  }

  class ViewportObserver {
    void updateDropdownList()
  }

  class ViewportObservers {
    void notifyObservers()
    void addObserver(ViewportObserver*)
  }

  class Viewwindow {
    float Xwmin
    float Ywmin
    float Xwmax
    float Ywmax

    void zoom_in (float scale = 1.5)
    void zoom_out(float scale = 1.5)

    void move_up    (int length = 10)
    void move_down  (int length = 10)
    void move_left  (int length = 10)
    void move_right (int length = 10)
  }

@enduml
