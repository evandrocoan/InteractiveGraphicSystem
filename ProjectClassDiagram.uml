
@startuml
  skinparam defaultFontName Consolas

  AddObjectWindow <|--  ViewPortObserver
  AddObjectWindow  *--  ViewPort           : viewPort*

  DisplayFile    "1\n"  *-down- "*" DrawableObject
  DrawableObject "1\n"  *-right- "*\n" Coordinate: coordinates

  Line    <|-up- DrawableObject
  Point   <|-up- DrawableObject
  Polygon <|-up- DrawableObject

  MainWindow *-down-  ViewPort             : viewPort
  MainWindow *-right- AddObjectWindow      : addObjectWindow
  MainWindow *-left-  TransformationWindow : transformationWindow

  TransformationWindow  *--  ViewPort      : viewPort*
  TransformationWindow  .down. Transformation

  ViewPort   *-left-  ViewWindow           : viewWindow
  ViewPort   *-down-  DisplayFile          : displayFile
  ViewPort   *-right- ViewPortObservers    : viewPortObservers

  ViewPortObservers "1" *-up- "*" ViewPortObserver : observers

  class AddObjectWindow {
    Gtk::Grid              point_grid
    Gtk::Grid              line_grid
    Gtk::Grid              polygn_grid
    std::list<Coordinate*> polygon_cord_list
  }

  class Coordinate {
    long int getx()
    long int gety()
    long int getz()
    void apply(Transformation)
  }

  class DisplayFile {
    std::map< string, DrawableObject* >
    void addObject( DrawableObject* )
    void removeObject( DrawableObject* )
    void removeObjectByName( string )
  }

  class DrawableObject {
    std::string name
    std::string       getName()
    list<Coordinate*> getCoordinates()
    void              apply(Transformation)
  }

  class Line {
    Line(std::string name, Coordinate*, Coordinate*)
  }

  class Point {
    Point(std::string name, Coordinate*)
  }

  class Polygon {
    Polygon(std::string name, list<Coordinate*>)
  }

  class MainWindow {
    Gtk::Box        main_box
    Gtk::Box        left_box
    Gtk::Frame      left_frame
    Gtk::Frame      right_frame
    ViewPort        viewPort
    AddObjectWindow addObjectWindow
  }

  class TransformationWindow {
    Gtk::Grid   rotation_grid
    Gtk::Grid   scaling_grid
    Gtk::Grid   translation_grid
  }

  class Transformation {
    long int _transformation[3][3];
    std::vector<long int[3][3]> scalings
    std::vector<long int[3][3]> rotations
    std::vector<long int[3][3]> transformations
    long int[3] apply(long int[3])
    void set_geometric_center(Coordinate)
  }

  class ViewPort {
    int Xvpmin
    int Yvpmin
    int Xvpmax
    int Yvpmax
    bool       on_draw(const Cairo::Context>&)
    void       updateViewport(Gtk::Allocation)
    Coordinate convertCoordinateFromWindow(Coordinate)
  }

  class ViewPortObserver {
    void updateDropdownList()
  }

  class ViewPortObservers {
    void notifyObservers()
    void addObserver(ViewPortObserver*)
  }

  class ViewWindow {
    float Xwmin
    float Ywmin
    float Xwmax
    float Ywmax
    void zoom_in (float scale)
    void zoom_out(float scale)
    void move_up    (int length)
    void move_down  (int length)
    void move_left  (int length)
    void move_right (int length)
  }

@enduml
